% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadData.r
\name{loadData}
\alias{loadData}
\title{Compute the differential transcription profile (log2-FC per-base)}
\usage{
loadData(
  sampleInfo,
  referenceCondition,
  locus,
  stranded = TRUE,
  strandSpecific = 1,
  fromBam = TRUE,
  coverageType = "average",
  readLength = 1,
  isPairedEnd = FALSE,
  nbThreads = 1,
  verbose = TRUE,
  featureCountsOtherParams = list()
)
}
\arguments{
\item{sampleInfo}{A \code{String}. Path to the file with
sample information. The file includes the following columns:
\itemize{
\item sample    : identifier for the sample ;
\item condition : identifier for the condition ;
\item replicate : identifier for the replicate ;
\item bam       : path to the bam file ;
\item coverage  : path to the coverage file (in rds format).
}}

\item{referenceCondition}{A \code{String}. Reference condition of
the RNA-Seq experiment. The reference condition specified by the
user is set to the denominator of the log2-FC.}

\item{locus}{A \code{List}. The list contains the coordinates for the target
genomic region:
\itemize{
\item seqid      : a \code{String}. Chromosome identifier
for the target genomic region ;
\item chromStart : an \code{Integer}. Start position for the target
genomic region ;
\item chromEnd   : an \code{Integer}. End position for the target
genomic region.
}}

\item{stranded}{A \code{Boolean}. Indicate if the reads are stranded or not.}

\item{strandSpecific}{Passed on to \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}.}

\item{fromBam}{A \code{Boolean}. Indicate if coverage profiles have to be
computed from bam files or loaded from pre-computed rds files.}

\item{coverageType}{A \code{String}. Select how to compute the coverage profiles:
\itemize{
\item fivePrime  : coverage profiles compute on 5' ends of reads ;
\item threePrime : coverage profiles compute on 3' ends of reads ;
\item average    : coverageFactory coverage profile compute on
average of 5' & 3' ends of reads ;
\item center     : coverage profiles compute on center position of reads ;
\item fullLength : coverage profiles compute on full length reads.
}}

\item{readLength}{An \code{Integer}. The average length of reads from bam files.}

\item{isPairedEnd}{Passed on to \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}.}

\item{nbThreads}{Passed on to \code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}.}

\item{verbose}{A \code{Boolean}. Should all the operations performed be displayed ?}

\item{featureCountsOtherParams}{A \code{List}. Other paramters passed on to
\code{\link[Rsubread:featureCounts]{Rsubread::featureCounts()}}.}
}
\value{
A \code{List}. The list contains loaded data:
\itemize{
\item coverage profiles  : a \code{List} of coverages as \code{Rle};
\item log2-FC            : an \code{Rle} of \code{Double} ;
\item stranded           : see \code{\link[=loadData]{loadData()}} ;
\item locus              : the target genomic region as \code{GRanges};
\item sampleInfo         : see \code{\link[=loadData]{loadData()}} ;
\item referenceCondition : see \code{\link[=loadData]{loadData()}} ;
}
}
\description{
\code{loadData()} loads :
\itemize{
\item the sample information related to an RNA-seq experiment ;
\item the coverage profile overlapping the locus specified by the user
(computed from bam files) ;
\item the log2-FC per-base (computed from coverages).
}
}
\examples{
# Create a working directory for running the example.
working_directory <- "./DIFFSEGR_TEST"
dir.create(working_directory, showWarnings = FALSE)

# Save sample information in a text file.
sample_info <- data.frame(
  sample    = c("pnp1_1_1", "pnp1_1_2", "wt_1", "wt_2"),
  condition = rep(c("pnp1_1", "wt"), each = 2),
  replicate = rep(1:2,2),
  bam       = sapply(
    c("pnp1_1_1_ChrC_71950_78500.bam", 
      "pnp1_1_2_ChrC_71950_78500.bam",
      "wt_1_ChrC_71950_78500.bam",
      "wt_2_ChrC_71950_78500.bam"
     ),
     function(bam) system.file("extdata", bam, package = "DiffSegR")
  ),
  coverage  = file.path(
    working_directory,
    paste0(c("pnp1_1_1", "pnp1_1_2", "wt_1", "wt_2"), ".rds")
  )
)
print(sample_info)
write.table(
  sample_info, 
  file.path(working_directory, "sample_info.txt")
)

# Build coverages and log2-FC.
data <- loadData(
  sampleInfo         = file.path(working_directory,"sample_info.txt"),
  locus        = list(
    seqid      = "ChrC", 
    chromStart = 71950, 
    chromEnd   = 78500
  ),
  referenceCondition = "wt",
  stranded           = TRUE,
  fromBam            = TRUE,
  nbThreads          = 1
)
print(data)

# delete working directory 
unlink(working_directory, recursive = TRUE)

}
